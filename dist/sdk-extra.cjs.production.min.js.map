{"version":3,"file":"sdk-extra.cjs.production.min.js","sources":["../src/blockchain.ts","../src/tokens.ts"],"sourcesContent":["import { ChainId, Currency, ETHER, HARMONY, BINANCE_COIN } from '@venomswap/sdk'\nimport random from 'lodash.random'\n\n/**\n * Blockchain is an enum representing different blockchains\n */\nexport enum Blockchain {\n  ETHEREUM = 1,\n  BINANCE_SMART_CHAIN = 2,\n  HARMONY = 3\n}\n\n/**\n * BlockchainSettings represents settings for a specific blockchain\n */\nexport class BlockchainSettings {\n  chainId: number\n  blockchain?: Blockchain\n  name?: string\n  rpcURLs?: string[]\n  rpcAPIKey?: string\n  explorerURL?: string\n  blockTime?: number\n  currency?: Currency\n  \n  constructor(chainId: ChainId, blockchain?: Blockchain, name?: string, rpcURLs?: string[], rpcAPIKey?: string, explorerURL?: string, blockTime?: number) {\n    this.chainId = chainId\n    this.rpcAPIKey = rpcAPIKey\n\n    this.setBlockchain(blockchain)\n    this.setName(name)\n    this.setRpcURLs(rpcURLs)\n    this.setExplorerURL(explorerURL)\n    this.setCurrency()\n    this.setBlocktime(blockTime)\n  }\n\n  setBlockchain(blockchain?: Blockchain) {\n    if (blockchain) {\n      this.blockchain = blockchain\n    } else {\n      switch (this.chainId) {\n        case 56:\n        case 97:\n          this.blockchain = Blockchain.BINANCE_SMART_CHAIN\n        break\n        case 1666600000:\n        case 1666700000:\n          this.blockchain = Blockchain.HARMONY\n        break\n        default:\n          this.blockchain = Blockchain.ETHEREUM\n      }\n    }\n  }\n\n  setName(name?: string) {\n    if (name) {\n      this.name = name\n    } else {\n      switch (this.chainId) {\n        case 1:\n          this.name = 'Ethereum Mainnet'\n          break\n        case 3:\n          this.name = 'Ethereum Ropsten'\n          break\n        case 4:\n          this.name = 'Ethereum Rinkeby'\n          break\n        case 5:\n          this.name = 'Ethereum Görli'\n          break\n        case 42:\n          this.name = 'Ethereum Kovan'\n          break\n        case 56:\n          this.name = 'Binance Smart Chain Mainnet'\n          break\n        case 97:\n          this.name = 'Binance Smart Chain Testnet'\n          break\n        case 1666600000:\n          this.name = 'Harmony Mainnet'\n          break\n        case 1666700000:\n          this.name = 'Harmony Testnet'\n          break\n        default:\n          this.name = 'Ethereum Mainnet'\n      }\n    }\n  }\n\n  setRpcURLs(rpcURLs?: string[]){\n    if (rpcURLs && rpcURLs.length > 0) {\n      this.rpcURLs = rpcURLs\n    } else {\n      switch (this.chainId) {\n        case 1:\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://mainnet.infura.io/v3/${this.rpcAPIKey}`] : ['https://mainnet.infura.io/v3/']\n          break\n        case 3:\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://ropsten.infura.io/v3/${this.rpcAPIKey}`] : ['https://ropsten.infura.io/v3/']\n          break\n        case 4:\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://rinkeby.infura.io/v3/${this.rpcAPIKey}`] : ['https://rinkeby.infura.io/v3/']\n          break\n        case 5:\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://goerli.infura.io/v3/${this.rpcAPIKey}`] : ['https://goerli.infura.io/v3/']\n          break\n        case 42:\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://kovan.infura.io/v3/${this.rpcAPIKey}`] : ['https://kovan.infura.io/v3/']\n          break\n        case 56:\n          this.rpcURLs = [\n            'https://bsc-dataseed.binance.org/',\n            'https://bsc-dataseed1.defibit.io/',\n            'https://bsc-dataseed1.ninicoin.io/'\n          ]\n          break\n        case 97:\n          this.rpcURLs = [\n            'https://data-seed-prebsc-1-s1.binance.org:8545/',\n            'https://data-seed-prebsc-2-s1.binance.org:8545/',\n            'https://data-seed-prebsc-1-s2.binance.org:8545/'\n          ]\n          break\n        case 1666600000:\n          this.rpcURLs = [\n            'https://api.harmony.one/',\n            'https://api.s0.t.hmny.io/',\n            'https://a.api.s0.t.hmny.io/'\n          ]\n          break\n        case 1666700000:\n          this.rpcURLs = ['https://api.s0.b.hmny.io/']\n          break\n        default:\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ? [`https://mainnet.infura.io/v3/${this.rpcAPIKey}`] : ['https://mainnet.infura.io/v3/']\n      }\n    }\n  }\n\n  setExplorerURL(explorerURL?: string){\n    if (explorerURL && explorerURL !== '') {\n      this.explorerURL = explorerURL\n    } else {\n      switch (this.chainId) {\n        case 1:\n          this.explorerURL = 'https://etherscan.io/'\n          break\n        case 3:\n          this.explorerURL = 'https://ropsten.etherscan.io/'\n          break\n        case 4:\n          this.explorerURL = 'https://rinkeby.etherscan.io/'\n          break\n        case 5:\n          this.explorerURL = 'https://goerli.etherscan.io/'\n          break\n        case 42:\n          this.explorerURL = 'https://kovan.etherscan.io/'\n          break\n        case 56:\n          this.explorerURL = 'https://bscscan.com/'\n          break\n        case 97:\n          this.explorerURL = 'https://testnet.bscscan.com/'\n          break\n        case 1666600000:\n          this.explorerURL = 'https://explorer.harmony.one/'\n          break\n        case 1666700000:\n          this.explorerURL = 'https://explorer.testnet.harmony.one/'\n          break\n        default:\n          this.explorerURL = 'https://etherscan.io/'\n      }\n    }\n  }\n\n  setCurrency() {\n    switch (this.chainId) {\n      case 56:\n      case 97:\n        this.currency = BINANCE_COIN\n        break\n      case 1666600000:\n      case 1666700000:\n        this.currency = HARMONY\n        break\n      default:\n        this.currency = ETHER\n    }\n  }\n\n  setBlocktime(blockTime?: number) {\n    if (blockTime) {\n      this.blockTime = blockTime\n    } else {\n      switch (this.chainId) {\n        case 56:\n        case 97:\n          this.blockTime = 3\n          break\n        case 1666600000:\n        case 1666700000:\n          this.blockTime = 2\n          break\n        default:\n          this.blockTime = 13\n      }\n    }\n  }\n\n  randomRpcURL(): string | undefined {\n    if (this.rpcURLs === undefined || this.rpcURLs.length === 0) return undefined\n    const randomIndex = random(0, this.rpcURLs.length - 1)\n    return this.rpcURLs[randomIndex]\n  }\n\n  hexChainId(): string {\n    return `0x${this.chainId?.toString(16)}`\n  }\n}\n\nexport const BLOCKCHAIN_SETTINGS: { [chainId in ChainId]: BlockchainSettings } = {\n  [ChainId.MAINNET]: new BlockchainSettings(ChainId.MAINNET),\n  [ChainId.ROPSTEN]: new BlockchainSettings(ChainId.ROPSTEN),\n  [ChainId.RINKEBY]: new BlockchainSettings(ChainId.RINKEBY),\n  [ChainId.GÖRLI]: new BlockchainSettings(ChainId.GÖRLI),\n  [ChainId.KOVAN]: new BlockchainSettings(ChainId.KOVAN),\n  [ChainId.BSC_MAINNET]: new BlockchainSettings(ChainId.BSC_MAINNET),\n  [ChainId.BSC_TESTNET]: new BlockchainSettings(ChainId.BSC_TESTNET),\n  [ChainId.HARMONY_MAINNET]: new BlockchainSettings(ChainId.HARMONY_MAINNET),\n  [ChainId.HARMONY_TESTNET]: new BlockchainSettings(ChainId.HARMONY_TESTNET),\n}\n","import DEFAULT_TOKEN_LIST from '@venomswap/default-token-list'\nimport COMMUNITY_TOKEN_LIST from '@venomswap/community-token-list'\nimport { ChainId, Token } from '@venomswap/sdk'\n\nexport interface TokenListToken {\n  chainId: number\n  address: string\n  name: string\n  symbol: string\n  decimals: number\n  logoURI: string\n}\n\nexport class Tokens {\n  chainId?: ChainId\n  rawTokens: TokenListToken[]\n  tokens?: Token[]\n  \n  constructor(chainId?: ChainId, tokens = [...DEFAULT_TOKEN_LIST.tokens, ...COMMUNITY_TOKEN_LIST.tokens]) {\n    this.chainId = chainId\n    this.rawTokens = tokens\n    this.setTokens()\n  }\n\n  private setTokens() {\n    this.tokens = this.convertTokens(this.rawTokens)\n\n    if (this.chainId) {\n      this.tokens = this.byChainId()\n    }\n  }\n\n  public all(): Token[] | undefined {\n    if (!this.tokens || this.tokens.length == 0) return undefined\n    return this.tokens\n  }\n\n  public byChainId(): Token[] | undefined {\n    if (this.chainId === undefined || this.tokens === undefined) return undefined\n    return this.tokens.filter((token: Token) => token.chainId == this.chainId)\n  }\n\n  public byName(name: string): Token[] | undefined {\n    return this.find('name', name)\n  }\n\n  public bySymbol(symbol: string): Token[] | undefined {\n    return this.find('symbol', symbol)\n  }\n\n  public byAddress(address: string): Token[] | undefined {\n    return this.find('address', address)\n  }\n\n  public firstByName(name: string): Token | undefined {\n    return this.find('name', name)?.[0]\n  }\n\n  public firstBySymbol(symbol: string): Token | undefined {\n    return this.find('symbol', symbol)?.[0]\n  }\n\n  public firstByAddress(address: string): Token | undefined {\n    return this.find('address', address)?.[0]\n  }\n\n  public find(key: string, value: string): Token[] | undefined {\n    if (this.tokens === undefined) return undefined\n  \n    switch (key) {\n      case 'name':\n        return this.tokens.filter((token) => token?.name?.toLowerCase() == value.toLowerCase())\n      case 'symbol':\n        return this.tokens.filter((token) => token?.symbol?.toLowerCase() == value.toLowerCase())\n      case 'address':\n        return this.tokens.filter((token) => token?.address?.toLowerCase() == value.toLowerCase())\n      default:\n        return this.tokens.filter((token) => token?.name?.toLowerCase() == value.toLowerCase())\n    }\n  }\n\n  public first(key: string, value: string): Token | undefined {\n    return this.find(key, value)?.[0]\n  }\n  \n  public convertTokens(tokens: TokenListToken[]): Token[] {\n    const sdkTokens: Token[] = []\n  \n    for (const token of tokens) {\n      const sdkToken = this.convertToken(token)\n      sdkTokens.push(sdkToken)\n    }\n  \n    return sdkTokens\n  }\n  \n  public convertToken(token: TokenListToken): Token {\n    return new Token(token.chainId, token.address, token.decimals, token.symbol, token.name)\n  }\n}\n\nexport const TOKENS: { [chainId in ChainId]: Tokens } = {\n  [ChainId.MAINNET]: new Tokens(ChainId.MAINNET),\n  [ChainId.ROPSTEN]: new Tokens(ChainId.ROPSTEN),\n  [ChainId.RINKEBY]: new Tokens(ChainId.RINKEBY),\n  [ChainId.GÖRLI]: new Tokens(ChainId.GÖRLI),\n  [ChainId.KOVAN]: new Tokens(ChainId.KOVAN),\n  [ChainId.BSC_MAINNET]: new Tokens(ChainId.BSC_MAINNET),\n  [ChainId.BSC_TESTNET]: new Tokens(ChainId.BSC_TESTNET),\n  [ChainId.HARMONY_MAINNET]: new Tokens(ChainId.HARMONY_MAINNET),\n  [ChainId.HARMONY_TESTNET]: new Tokens(ChainId.HARMONY_TESTNET),\n}\n"],"names":["Blockchain","BlockchainSettings","chainId","blockchain","name","rpcURLs","rpcAPIKey","explorerURL","blockTime","setBlockchain","setName","setRpcURLs","setExplorerURL","setCurrency","setBlocktime","this","BINANCE_SMART_CHAIN","HARMONY","ETHEREUM","length","currency","BINANCE_COIN","ETHER","randomRpcURL","undefined","randomIndex","random","hexChainId","_this$chainId","toString","BLOCKCHAIN_SETTINGS","ChainId","MAINNET","ROPSTEN","RINKEBY","GÖRLI","KOVAN","BSC_MAINNET","BSC_TESTNET","HARMONY_MAINNET","HARMONY_TESTNET","Tokens","tokens","DEFAULT_TOKEN_LIST","COMMUNITY_TOKEN_LIST","rawTokens","setTokens","convertTokens","byChainId","all","filter","token","_this","byName","find","bySymbol","symbol","byAddress","address","firstByName","_this$find","firstBySymbol","_this$find2","firstByAddress","_this$find3","key","value","toLowerCase","first","_this$find4","sdkTokens","sdkToken","convertToken","push","Token","decimals","TOKENS"],"mappings":"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"}